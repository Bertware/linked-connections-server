#!/usr/bin/node
var path = require('path'),
    fs = require('fs'),
    program = require('commander'),
    MongoClient = require('mongodb').MongoClient,
    Deserializer = require('../lib/FileStreamToJSONLDStream'),
    JSONLDStreamToMongo = require('../lib/JSONLDStreamToMongo');
    
console.error("Mongo jsonldstream importer. Use --help to discover more functions");

var readStream, filename;

program
  .version('0.1.0')
  .option('-h --host [host]', 'host')
  .option('-d --db [db]', 'database')
  .option('-c --collection [collection]', 'collection')
  .option('--port', 'port')
  .arguments('<file.jsonldstream>')
  .action(function (file) {
    filename = file;
    try {
      readStream = fs.createReadStream(filename, { encoding: 'utf8' });
    } catch (error) {
      console.error(error);
    }
  })
  .parse(process.argv);

if (!readStream) {
  console.error('Please provide a valid path to a jsonldstream');
  process.exit();
}

//pipe the readstream to our streamToMongo transformer
var mongoStream = readStream.pipe(new Deserializer()).pipe(new JSONLDStreamToMongo());

//create mongdb connection string
var host = program.host || 'localhost',
    database = program.db || '',
    collection = program.collection || filename,
    port = program.port || '27017',
    dbstring = 'mongodb://' + host + ':' + port + '/' + database;

MongoClient.connect(dbstring, function(err, db) {
  if (err) {
    throw 'Error connecting to the db: ' + err;
  } else {
    //create collection object
    var col = db.collection(collection);
    mongoStream.on('data', function (object) {
      col.update(object, {'upsert':true}, function (err, r) {
        console.log('ok');
      });
    });
    mongoStream.on('finish', function () {
      console.log('ended');
    });
  }
});
