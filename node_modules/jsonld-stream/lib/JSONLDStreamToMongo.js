/**
 * This class transforms a JSONLD-stream into a stream ingestible by mongodb
 * @author Pieter Colpaert <pieter.colpaert@ugent.be>
 */
var Transform = require('stream').Transform,
    util = require('util'),
    N3 = require('n3'),
    jsonld = require('jsonld');

util.inherits(JSONLDStreamToMongo, Transform);

function JSONLDStreamToMongo () {
  Transform.call(this, {objectMode : true});
}

JSONLDStreamToMongo.prototype._transform = function (object, encoding, done) {
  if (object["@context"]) {
    this.context = object;
    done(null, object);
  } else {
    //1. Make sure, if there's an @id field, we copy it to _id
    if (object["@id"]) {
      object._id = object["@id"];
    }
    //2. process types of the things we encounter to be indexable by mongodb
    this._processData(object, function (compacted) {
      console.log(compacted);
      done(null, compacted);
    });
  }
};

/**
 * Processes context to an array of things we should know about (e.g., xsd:dateTime, xsd:duration, geo-features...)
 */
JSONLDStreamToMongo.prototype._processContext = function (context, cb) {
  if (context['@context']) {

  }
  for (var key in context) {

  }
};

module.exports = JSONLDStreamToMongo;
